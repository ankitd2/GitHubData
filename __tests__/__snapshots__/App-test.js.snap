// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders the loading screen 1`] = `
<AppLoading
  onError={[Function]}
  onFinish={[Function]}
  startAsync={[Function]}
/>
`;

exports[`App renders the root without loading screen 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <AppNavigator />
</View>
`;

exports[`Fetch Data works gets data 1`] = `
<View
  style={
    Array [
      Object {
        "alignContent": "center",
        "justifyContent": "center",
        "margin": 10,
      },
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      },
    ]
  }
>
  <Image
    alignSelf="center"
    source={
      Object {
        "uri": undefined,
      }
    }
    style={
      Object {
        "height": 150,
        "margin": 5,
        "marginBottom": 40,
        "resizeMode": "center",
        "width": 150,
      }
    }
  />
  <Text
    style={
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      }
    }
  >
    Name : 
  </Text>
  <Text
    style={
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      }
    }
  >
    Username : 
  </Text>
  <Text
    style={
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      }
    }
  >
    Location : 
  </Text>
  <Text
    style={
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      }
    }
  >
    Bio : 
  </Text>
  <Text
    style={
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      }
    }
  >
    Website : 
    <Text
      onPress={[Function]}
      style={
        Array [
          Object {
            "fontFamily": "Avenir-Roman",
            "fontSize": 18,
            "marginBottom": 10,
          },
          Object {
            "color": "blue",
            "textDecorationLine": "underline",
          },
        ]
      }
    />
  </Text>
  <Text
    style={
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      }
    }
  >
    Email : 
  </Text>
  <Text
    style={
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      }
    }
  >
    Created At : 
    Invalid Date
  </Text>
  <Text
    style={
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      }
    }
  >
    Followers : 
  </Text>
  <Text
    style={
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      }
    }
  >
    Following : 
  </Text>
  <Text
    style={
      Object {
        "fontFamily": "Avenir-Roman",
        "fontSize": 18,
        "marginBottom": 10,
      }
    }
  >
    Number of Public Repositories: 
  </Text>
</View>
`;

exports[`Followers renders correctly 1`] = `
<RCTScrollView
  collapsable={false}
  contentContainerStyle={
    Object {
      "paddingTop": 15,
    }
  }
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  style={
    Object {
      "backgroundColor": "#fafafa",
      "flex": 1,
    }
  }
>
  <View>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            undefined,
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Read the Expo documentation
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            undefined,
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Read the React Navigation documentation
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "borderBottomWidth": 0.5,
            },
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Ask a question on the forums
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
  </View>
</RCTScrollView>
`;

exports[`Following renders correctly 1`] = `
<RCTScrollView
  collapsable={false}
  contentContainerStyle={
    Object {
      "paddingTop": 15,
    }
  }
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  style={
    Object {
      "backgroundColor": "#fafafa",
      "flex": 1,
    }
  }
>
  <View>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            undefined,
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Read the Expo documentation
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            undefined,
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Read the React Navigation documentation
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "borderBottomWidth": 0.5,
            },
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Ask a question on the forums
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
  </View>
</RCTScrollView>
`;

exports[`Home Screen renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    collapsable={false}
    contentContainerStyle={
      Object {
        "paddingTop": 30,
      }
    }
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    style={
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "marginBottom": 10,
            "marginTop": 10,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "flex": 1,
              "height": 150,
              "margin": -10,
              "resizeMode": "contain",
              "width": 500,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#fff",
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignContent": "center",
                "justifyContent": "center",
                "margin": 10,
              },
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              },
            ]
          }
        >
          <Image
            alignSelf="center"
            source={
              Object {
                "uri": undefined,
              }
            }
            style={
              Object {
                "height": 150,
                "margin": 5,
                "marginBottom": 40,
                "resizeMode": "center",
                "width": 150,
              }
            }
          />
          <Text
            style={
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              }
            }
          >
            Name : 
          </Text>
          <Text
            style={
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              }
            }
          >
            Username : 
          </Text>
          <Text
            style={
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              }
            }
          >
            Location : 
          </Text>
          <Text
            style={
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              }
            }
          >
            Bio : 
          </Text>
          <Text
            style={
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              }
            }
          >
            Website : 
            <Text
              onPress={[Function]}
              style={
                Array [
                  Object {
                    "fontFamily": "Avenir-Roman",
                    "fontSize": 18,
                    "marginBottom": 10,
                  },
                  Object {
                    "color": "blue",
                    "textDecorationLine": "underline",
                  },
                ]
              }
            />
          </Text>
          <Text
            style={
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              }
            }
          >
            Email : 
          </Text>
          <Text
            style={
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              }
            }
          >
            Created At : 
            Invalid Date
          </Text>
          <Text
            style={
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              }
            }
          >
            Followers : 
          </Text>
          <Text
            style={
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              }
            }
          >
            Following : 
          </Text>
          <Text
            style={
              Object {
                "fontFamily": "Avenir-Roman",
                "fontSize": 18,
                "marginBottom": 10,
              }
            }
          >
            Number of Public Repositories: 
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Repo Screen renders correctly 1`] = `
<RCTScrollView
  collapsable={false}
  contentContainerStyle={
    Object {
      "paddingTop": 15,
    }
  }
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  style={
    Object {
      "backgroundColor": "#fafafa",
      "flex": 1,
    }
  }
>
  <View>
    <View
      style={
        Array [
          Object {
            "alignContent": "center",
            "justifyContent": "center",
            "margin": 10,
          },
          Object {
            "fontFamily": "Avenir-Roman",
            "fontSize": 18,
            "marginBottom": 25,
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`renders correctly 1`] = `null`;

exports[`renders correctly 2`] = `
<RCTScrollView
  collapsable={false}
  contentContainerStyle={
    Object {
      "paddingTop": 15,
    }
  }
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  style={
    Object {
      "backgroundColor": "#fafafa",
      "flex": 1,
    }
  }
>
  <View>
    <View
      style={
        Array [
          Object {
            "alignContent": "center",
            "justifyContent": "center",
            "margin": 10,
          },
          Object {
            "fontFamily": "Avenir-Roman",
            "fontSize": 18,
            "marginBottom": 25,
          },
        ]
      }
    />
  </View>
</RCTScrollView>
`;

exports[`renders correctly 3`] = `
<RCTScrollView
  collapsable={false}
  contentContainerStyle={
    Object {
      "paddingTop": 15,
    }
  }
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  style={
    Object {
      "backgroundColor": "#fafafa",
      "flex": 1,
    }
  }
>
  <View>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            undefined,
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Read the Expo documentation
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            undefined,
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Read the React Navigation documentation
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "borderBottomWidth": 0.5,
            },
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Ask a question on the forums
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
  </View>
</RCTScrollView>
`;

exports[`renders correctly 4`] = `
<RCTScrollView
  collapsable={false}
  contentContainerStyle={
    Object {
      "paddingTop": 15,
    }
  }
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  style={
    Object {
      "backgroundColor": "#fafafa",
      "flex": 1,
    }
  }
>
  <View>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            undefined,
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Read the Expo documentation
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            undefined,
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Read the React Navigation documentation
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "backgroundColor": "#fdfdfd",
              "borderBottomWidth": 0,
              "borderColor": "#ededed",
              "borderWidth": 0.5,
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "borderBottomWidth": 0.5,
            },
          ],
        ]
      }
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "marginRight": 12,
            }
          }
        >
          <Text />
        </View>
        <View>
          <Text
            style={
              Object {
                "alignSelf": "flex-start",
                "fontSize": 15,
                "marginTop": 1,
              }
            }
          >
            Ask a question on the forums
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
  </View>
</RCTScrollView>
`;

exports[`renders the loading screen 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNCSafeAreaView
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
            "overflow": "hidden",
          }
        }
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onOpen={[Function]}
            onTransitionStart={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 0.01,
                    "restSpeedThreshold": 0.01,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 0.01,
                    "restSpeedThreshold": 0.01,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                  "marginTop": 64,
                }
              }
            >
              <View
                collapsable={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                            "overflow": "hidden",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            collapsable={false}
                            pointerEvents="auto"
                            removeClippedSubviews={false}
                            style={
                              Array [
                                Object {
                                  "flex": 1,
                                  "overflow": "hidden",
                                },
                                null,
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                accessibilityElementsHidden={false}
                                importantForAccessibility="auto"
                                style={
                                  Array [
                                    Object {
                                      "flex": 1,
                                    },
                                    Object {
                                      "backgroundColor": "rgb(242, 242, 242)",
                                    },
                                  ]
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "backgroundColor": "#fff",
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <RCTScrollView
                                    collapsable={false}
                                    contentContainerStyle={
                                      Object {
                                        "paddingTop": 30,
                                      }
                                    }
                                    onGestureHandlerEvent={[Function]}
                                    onGestureHandlerStateChange={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "#fff",
                                        "flex": 1,
                                      }
                                    }
                                  >
                                    <View>
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "marginBottom": 10,
                                            "marginTop": 10,
                                          }
                                        }
                                      >
                                        <Image
                                          source={1}
                                          style={
                                            Object {
                                              "flex": 1,
                                              "height": 150,
                                              "margin": -10,
                                              "resizeMode": "contain",
                                              "width": 500,
                                            }
                                          }
                                        />
                                      </View>
                                      <View
                                        style={
                                          Object {
                                            "backgroundColor": "#fff",
                                            "flex": 1,
                                          }
                                        }
                                      >
                                        <View
                                          style={
                                            Array [
                                              Object {
                                                "alignContent": "center",
                                                "justifyContent": "center",
                                                "margin": 10,
                                              },
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              },
                                            ]
                                          }
                                        >
                                          <Image
                                            alignSelf="center"
                                            source={
                                              Object {
                                                "uri": undefined,
                                              }
                                            }
                                            style={
                                              Object {
                                                "height": 150,
                                                "margin": 5,
                                                "marginBottom": 40,
                                                "resizeMode": "center",
                                                "width": 150,
                                              }
                                            }
                                          />
                                          <Text
                                            style={
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              }
                                            }
                                          >
                                            Name : 
                                          </Text>
                                          <Text
                                            style={
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              }
                                            }
                                          >
                                            Username : 
                                          </Text>
                                          <Text
                                            style={
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              }
                                            }
                                          >
                                            Location : 
                                          </Text>
                                          <Text
                                            style={
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              }
                                            }
                                          >
                                            Bio : 
                                          </Text>
                                          <Text
                                            style={
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              }
                                            }
                                          >
                                            Website : 
                                            <Text
                                              onPress={[Function]}
                                              style={
                                                Array [
                                                  Object {
                                                    "fontFamily": "Avenir-Roman",
                                                    "fontSize": 18,
                                                    "marginBottom": 10,
                                                  },
                                                  Object {
                                                    "color": "blue",
                                                    "textDecorationLine": "underline",
                                                  },
                                                ]
                                              }
                                            />
                                          </Text>
                                          <Text
                                            style={
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              }
                                            }
                                          >
                                            Email : 
                                          </Text>
                                          <Text
                                            style={
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              }
                                            }
                                          >
                                            Created At : 
                                            Invalid Date
                                          </Text>
                                          <Text
                                            style={
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              }
                                            }
                                          >
                                            Followers : 
                                          </Text>
                                          <Text
                                            style={
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              }
                                            }
                                          >
                                            Following : 
                                          </Text>
                                          <Text
                                            style={
                                              Object {
                                                "fontFamily": "Avenir-Roman",
                                                "fontSize": 18,
                                                "marginBottom": 10,
                                              }
                                            }
                                          >
                                            Number of Public Repositories: 
                                          </Text>
                                        </View>
                                      </View>
                                    </View>
                                  </RCTScrollView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                        <View
                          pointerEvents="auto"
                          style={
                            Object {
                              "backgroundColor": "rgb(255, 255, 255)",
                              "borderTopColor": "rgb(224, 224, 224)",
                              "borderTopWidth": 0.5,
                              "bottom": 0,
                              "elevation": 8,
                              "height": 50,
                              "left": 0,
                              "paddingBottom": 0,
                              "paddingHorizontal": 0,
                              "right": 0,
                            }
                          }
                        >
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "flex": 1,
                                "flexDirection": "row",
                              }
                            }
                          >
                            <View
                              accessibilityLabel="Profile, tab, 1 of 4"
                              accessibilityRole="button"
                              accessibilityStates={
                                Array [
                                  "selected",
                                ]
                              }
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flex": 1,
                                  },
                                  Object {
                                    "backgroundColor": "transparent",
                                  },
                                  Object {
                                    "flexDirection": "column",
                                    "justifyContent": "flex-end",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "flex": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "alignSelf": "center",
                                        "height": "100%",
                                        "justifyContent": "center",
                                        "minWidth": 25,
                                        "position": "absolute",
                                        "width": "100%",
                                      },
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <Text />
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "alignSelf": "center",
                                        "height": "100%",
                                        "justifyContent": "center",
                                        "minWidth": 25,
                                        "position": "absolute",
                                        "width": "100%",
                                      },
                                      Object {
                                        "opacity": 0,
                                      },
                                    ]
                                  }
                                >
                                  <Text />
                                </View>
                              </View>
                              <Text
                                numberOfLines={1}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "color": "rgb(0, 122, 255)",
                                    "fontSize": 11,
                                    "marginBottom": 1.5,
                                    "textAlign": "center",
                                  }
                                }
                              >
                                Profile
                              </Text>
                            </View>
                            <View
                              accessibilityLabel="Repositories, tab, 2 of 4"
                              accessibilityRole="button"
                              accessibilityStates={Array []}
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flex": 1,
                                  },
                                  Object {
                                    "backgroundColor": "transparent",
                                  },
                                  Object {
                                    "flexDirection": "column",
                                    "justifyContent": "flex-end",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "flex": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "alignSelf": "center",
                                        "height": "100%",
                                        "justifyContent": "center",
                                        "minWidth": 25,
                                        "position": "absolute",
                                        "width": "100%",
                                      },
                                      Object {
                                        "opacity": 0,
                                      },
                                    ]
                                  }
                                >
                                  <Text />
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "alignSelf": "center",
                                        "height": "100%",
                                        "justifyContent": "center",
                                        "minWidth": 25,
                                        "position": "absolute",
                                        "width": "100%",
                                      },
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <Text />
                                </View>
                              </View>
                              <Text
                                numberOfLines={1}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "color": "#8E8E8F",
                                    "fontSize": 11,
                                    "marginBottom": 1.5,
                                    "textAlign": "center",
                                  }
                                }
                              >
                                Repositories
                              </Text>
                            </View>
                            <View
                              accessibilityLabel="Followers, tab, 3 of 4"
                              accessibilityRole="button"
                              accessibilityStates={Array []}
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flex": 1,
                                  },
                                  Object {
                                    "backgroundColor": "transparent",
                                  },
                                  Object {
                                    "flexDirection": "column",
                                    "justifyContent": "flex-end",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "flex": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "alignSelf": "center",
                                        "height": "100%",
                                        "justifyContent": "center",
                                        "minWidth": 25,
                                        "position": "absolute",
                                        "width": "100%",
                                      },
                                      Object {
                                        "opacity": 0,
                                      },
                                    ]
                                  }
                                >
                                  <Text />
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "alignSelf": "center",
                                        "height": "100%",
                                        "justifyContent": "center",
                                        "minWidth": 25,
                                        "position": "absolute",
                                        "width": "100%",
                                      },
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <Text />
                                </View>
                              </View>
                              <Text
                                numberOfLines={1}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "color": "#8E8E8F",
                                    "fontSize": 11,
                                    "marginBottom": 1.5,
                                    "textAlign": "center",
                                  }
                                }
                              >
                                Followers
                              </Text>
                            </View>
                            <View
                              accessibilityLabel="Following, tab, 4 of 4"
                              accessibilityRole="button"
                              accessibilityStates={Array []}
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flex": 1,
                                  },
                                  Object {
                                    "backgroundColor": "transparent",
                                  },
                                  Object {
                                    "flexDirection": "column",
                                    "justifyContent": "flex-end",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "flex": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "alignSelf": "center",
                                        "height": "100%",
                                        "justifyContent": "center",
                                        "minWidth": 25,
                                        "position": "absolute",
                                        "width": "100%",
                                      },
                                      Object {
                                        "opacity": 0,
                                      },
                                    ]
                                  }
                                >
                                  <Text />
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "alignSelf": "center",
                                        "height": "100%",
                                        "justifyContent": "center",
                                        "minWidth": 25,
                                        "position": "absolute",
                                        "width": "100%",
                                      },
                                      Object {
                                        "opacity": 1,
                                      },
                                    ]
                                  }
                                >
                                  <Text />
                                </View>
                              </View>
                              <Text
                                numberOfLines={1}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "color": "#8E8E8F",
                                    "fontSize": 11,
                                    "marginBottom": 1.5,
                                    "textAlign": "center",
                                  }
                                }
                              >
                                Following
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "borderBottomColor": "rgb(224, 224, 224)",
                  "flex": 1,
                  "shadowColor": "rgb(224, 224, 224)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            pointerEvents="box-none"
            style={
              Object {
                "height": 64,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 20,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "marginHorizontal": 18,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgb(28, 28, 30)",
                      "fontSize": 17,
                      "fontWeight": "600",
                    }
                  }
                >
                  GitHub User Profile
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RNCSafeAreaView>
  </View>
</View>
`;
